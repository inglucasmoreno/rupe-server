// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Listado de modelos

model Usuarios {
  id                                     Int                                      @id @default(autoincrement())
  usuario                                String                                   @unique @db.VarChar(30)
  apellido                               String                                   @db.VarChar(50)
  nombre                                 String                                   @db.VarChar(50)
  dni                                    String                                   @db.VarChar(30)
  password                               String
  email                                  String                                   @db.VarChar(50)
  role                                   String?                                  @default("ADMIN_ROLE")
  activo                                 Boolean?                                 @default(true)
  createdAt                              DateTime                                 @default(now())
  updatedAt                              DateTime                                 @updatedAt
  permisos                               UsuariosPermisos[]
  Personas                               Personas[]
  Vehiculos                              Vehiculos[]
  RupeDiscapacidad                       RupeDiscapacidad[]
  RupeConductorDiscapacitado             RupeConductorDiscapacitado[]
  RupeConductores                        RupeConductores[]
  RupeDiscapacidadRenovaciones           RupeDiscapacidadRenovaciones[]
  RupeConductorDiscapacitadoRenovaciones RupeConductorDiscapacitadoRenovaciones[]
}

model UsuariosPermisos {
  id        Int       @id @default(autoincrement())
  alcance   String    @db.VarChar(50)
  permiso   String    @db.VarChar(50)
  usuarioId Int
  usuario   Usuarios  @relation(fields: [usuarioId], references: [id])
  activo    Boolean?  @default(true)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Personas {
  id                         Int                          @id @default(autoincrement())
  apellido                   String                       @db.VarChar(100)
  nombre                     String                       @db.VarChar(100)
  dni                        String                       @db.VarChar(30)
  telefono                   String                       @default("") @db.VarChar(30)
  sexo                       String                       @default("Masculino") @db.VarChar(20)
  activo                     Boolean?                     @default(true)
  creatorUserId              Int
  creatorUser                Usuarios                     @relation(fields: [creatorUserId], references: [id])
  createdAt                  DateTime?                    @default(now())
  updatedAt                  DateTime?                    @updatedAt
  RupeDiscapacidad           RupeDiscapacidad[]
  RupeConductorDiscapacitado RupeConductorDiscapacitado[]
  RupeConductores            RupeConductores[]
}

model Vehiculos {
  id                         Int                          @id @default(autoincrement())
  marca                      String                       @db.VarChar(100)
  modelo                     String                       @db.VarChar(100)
  dominio                    String                       @db.VarChar(100)
  activo                     Boolean?                     @default(true)
  creatorUserId              Int
  creatorUser                Usuarios                     @relation(fields: [creatorUserId], references: [id])
  createdAt                  DateTime?                    @default(now())
  updatedAt                  DateTime?                    @updatedAt
  RupeDiscapacidad           RupeDiscapacidad[]
  RupeConductorDiscapacitado RupeConductorDiscapacitado[]
}

model RupeDiscapacidad {
  id                           Int                            @id @default(autoincrement())
  telefonoContacto             String                         @db.VarChar(50)
  fechaOtorgamiento            DateTime                       @default(now())
  fechaVencimiento             DateTime                       @default(now())
  activo                       Boolean?                       @default(true)
  beneficiarioId               Int
  beneficiario                 Personas                       @relation(fields: [beneficiarioId], references: [id])
  vehiculoId                   Int
  vehiculo                     Vehiculos                      @relation(fields: [vehiculoId], references: [id])
  creatorUserId                Int
  creatorUser                  Usuarios                       @relation(fields: [creatorUserId], references: [id])
  createdAt                    DateTime?                      @default(now())
  updatedAt                    DateTime?                      @updatedAt
  RupeDiscapacidadRenovaciones RupeDiscapacidadRenovaciones[]
}

model RupeConductorDiscapacitado {
  id                                     Int                                      @id @default(autoincrement())
  telefonoContacto                       String                                   @db.VarChar(50)
  fechaOtorgamiento                      DateTime                                 @default(now())
  fechaVencimiento                       DateTime                                 @default(now())
  activo                                 Boolean?                                 @default(true)
  beneficiarioId                         Int
  beneficiario                           Personas                                 @relation(fields: [beneficiarioId], references: [id])
  vehiculoId                             Int
  vehiculo                               Vehiculos                                @relation(fields: [vehiculoId], references: [id])
  creatorUserId                          Int
  creatorUser                            Usuarios                                 @relation(fields: [creatorUserId], references: [id])
  createdAt                              DateTime?                                @default(now())
  updatedAt                              DateTime?                                @updatedAt
  RupeConductores                        RupeConductores[]
  RupeConductorDiscapacitadoRenovaciones RupeConductorDiscapacitadoRenovaciones[]
}

model RupeConductores {
  id                           Int                        @id @default(autoincrement())
  activo                       Boolean?                   @default(true)
  personaId                    Int
  persona                      Personas                   @relation(fields: [personaId], references: [id])
  rupeConductorDiscapacitadoId Int
  rupeConductorDiscapacitado   RupeConductorDiscapacitado @relation(fields: [rupeConductorDiscapacitadoId], references: [id])
  creatorUserId                Int
  creatorUser                  Usuarios                   @relation(fields: [creatorUserId], references: [id])
  createdAt                    DateTime?                  @default(now())
  updatedAt                    DateTime?                  @updatedAt
}

model RupeDiscapacidadRenovaciones {
  id                 Int              @id @default(autoincrement())
  rupeDiscapacidadId Int
  rupeDiscapacidad   RupeDiscapacidad @relation(fields: [rupeDiscapacidadId], references: [id])
  fechaRenovacion    DateTime         @default(now())
  activo             Boolean?         @default(true)
  creatorUserId      Int
  creatorUser        Usuarios         @relation(fields: [creatorUserId], references: [id])
  createdAt          DateTime?        @default(now())
  updatedAt          DateTime?        @updatedAt
}

model RupeConductorDiscapacitadoRenovaciones {
  id                           Int                        @id @default(autoincrement())
  rupeConductorDiscapacitadoId Int
  rupeConductorDiscapacitado   RupeConductorDiscapacitado @relation(fields: [rupeConductorDiscapacitadoId], references: [id])
  fechaRenovacion              DateTime                   @default(now())
  activo                       Boolean?                   @default(true)
  creatorUserId                Int
  creatorUser                  Usuarios                   @relation(fields: [creatorUserId], references: [id])
  createdAt                    DateTime?                  @default(now())
  updatedAt                    DateTime?                  @updatedAt
}
